---
AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Load Balancer IP address Provider
Parameters:
  S3BucketName:
    Type: String
    Default: ''
  S3BucketPrefix:
    Type: String
    Default: 'binxio-public'
  CFNCustomProviderZipFileName:
    Type: String
    Default: 'lambdas/cfn-lb-ip-address-provider-0.2.5.zip'
Conditions:
  UseBucketName: !Not [!Equals [!Ref S3BucketName, ""]]
Resources:
  LambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CFNLBIpAddressProvider
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'ec2:DescribeNetworkInterfaces'
            Resource: '*'
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: !GetAtt 'CFNCustomProviderLogGroup.Arn'
      Roles:
        - !Ref 'LambdaRole'
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
  CFNCustomProviderLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/binxio-cfn-lb-ip-address-provider
      RetentionInDays: 7
  CFNAMIProvider:
    Type: AWS::Lambda::Function
    DependsOn:
      - CFNCustomProviderLogGroup
    Properties:
      Description: CloudFormation Custom:LBIpAddress implementation
      Code:
        S3Bucket: !If [UseBucketName, !Ref S3BucketName, !Sub '${S3BucketPrefix}-${AWS::Region}']
        S3Key: !Ref 'CFNCustomProviderZipFileName'
      FunctionName: binxio-cfn-lb-ip-address-provider
      Handler: cfn_lb_ip_address_provider.handler
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt 'LambdaRole.Arn'
      Runtime: python3.9
Outputs:
  LambdaArn:
    Value: !Ref CFNAMIProvider
